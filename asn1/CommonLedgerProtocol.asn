CommonLedgerProtocol
DEFINITIONS
AUTOMATIC TAGS ::=
BEGIN

IMPORTS
    UInt8,
    UInt32,
    UInt64,
    UInt128,
    UInt256
    FROM GenericTypes

    Address,
    Timestamp
    FROM InterledgerTypes

    InterledgerPacket
    FROM InterledgerPacket -- we rename this file from GenericPacket.asn

    BalancePacket
    FROM BalancePacket
;

SideProtocolData ::= SEQUENCE OF SEQUENCE {
  protocolName IA5String,
  protocolData OCTET STRING
}

Ack ::= SEQUENCE {
  ack NULL,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

Response ::= SEQUENCE {
  packet InterledgerPacket,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

CustomResponse ::= SEQUENCE {
  sideProtocolData SideProtocolData
}

Prepare ::= SEQUENCE {
  transferId UInt128,
  amount UInt64,
  executionCondition UInt256,
  expiresAt Timestamp,
  packet InterledgerPacket,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

Fulfill ::= SEQUENCE {
  transferId UInt128,
  fulfillment UInt256,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

Reject ::= SEQUENCE {
  transferId UInt128,
  rejectionReason InterledgerPacket,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

Message ::= SEQUENCE {
  packet InterledgerPacket,
  -- Additional data for protocol extensibility
  sideProtocolData SideProtocolData
}

CustomRequest ::= SEQUENCE {
  sideProtocolData SideProtocolData
}

CALL ::= CLASS {
    &typeId UInt8 UNIQUE,
    &Type
} WITH SYNTAX {&typeId &Type}

CallSet CALL ::= {
    {0 CustomRequest}
    {1 CustomResponse} |
    {16 InterledgerRequest} |
    {17 InterledgerResponse} |
    {18 InterledgerPrepare} |
    {19 InterledgerFulfill} |
    {20 InterledgerReject} |
    {21 InterledgerAck} |
    {32 BalanceRequest} |
    {33 BalanceResponse}
}

CommonLedgerProtocolPacket ::= SEQUENCE {
    -- One byte type ID
    type CALL.&typeId ({CallSet}),
    -- Used to associate requests and corresponding responses
    -- If requestId = 0, the server MUST not send a response
    requestId UInt32,
    -- Length-prefixed main data
    data CALL.&Type ({CallSet}{@type})
}

END
